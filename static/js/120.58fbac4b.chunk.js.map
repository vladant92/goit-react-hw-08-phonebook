{"version":3,"file":"static/js/120.58fbac4b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Container/Container.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  /* outline: 1px solid; */\n  padding: 30px;\n  /* padding: 4px 14px; */\n  border: 1px solid rgb(226, 229, 232);\n  border-radius: 12px;\n  box-shadow: 10px 10px 5px -7px rgb(164, 164, 164);\n  background-color: #f6f8fa;\n  margin-bottom:30px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  width: fit-content;\n  cursor: pointer;\n`;\n","export const selectContactsList = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filter;","import { useState } from 'react';\nimport { Button, Wrapper, Form, Input } from './ContactForm.styled';\n\nimport { toast } from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const isFetching = useSelector(selectIsLoading);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = data => {\n    if (isContactAlreadyExist(contacts, data)) {\n      toast.error(`${data.name} is already in contact`);\n      return;\n    }\n    dispatch(addContact(data));\n    toast.success('Create new contact successfully');\n  };\n\n  const isContactAlreadyExist = (contacts, data) => {\n    return contacts.find(contact => contact.name === data.name);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const createContact = e => {\n    e.preventDefault();\n    handleAddContact({\n      name,\n      number,\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={createContact}>\n        <label htmlFor=\"name\">Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n          value={name}\n        />\n        <label htmlFor=\"number\">Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          required\n          onChange={handleChange}\n          placeholder=\"Enter number\"\n          value={number}\n        />\n        <Button type=\"submin\" disabled={isFetching}>\n          Add contact\n        </Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  padding: 25px;\n  height: 150px;\n  width: 300px;\n  border: 1px solid rgb(226, 229, 232);\n  border-radius: 12px;\n  box-shadow: 10px 10px 5px -7px rgb(164, 164, 164);\n  background-color: #f6f8fa;\n  /* margin-bottom: 20px; */\n`;\n\nexport const UserIcon = styled(FaUser)`\n  padding: 3px;\n  width: 20px;\n  height: 20px;\n  fill: #fabb18;\n  /* border-radius: 12px; */\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 3px;\n  width: 20px;\n  height: 20px;\n  fill: #fabb18;\n  /* border-radius: 12px; */\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const Button = styled.button`\n  /* width: fit-content;\n  margin-left:auto;\n  margin-right: auto */\n`;\n\n","import React from 'react';\nimport { Wrapper, PhoneIcon, UserIcon, Button } from './ContactListItem.styled';\nimport { toast } from 'react-hot-toast';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/contacts/selectors';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectIsLoading);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n    toast.error('Delete contact successfully');\n  };\n\n  return (\n    <Wrapper>\n      <p>\n        <UserIcon /> {contact.name}\n      </p>\n      <p>\n        <PhoneIcon /> {contact.number}\n      </p>\n      <Button\n        onClick={() => handleDeleteContact(contact.id)}\n        disabled={isFetching}\n      >\n        Delete\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  /* max-width: 1300px; */\n  /* margin-left: auto; */\n  /* margin-right: auto; */\n  justify-content: center;\n\n  /* display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 24px; */\n`;\n\nexport const ListItem = styled.li`\n  /* margin-left: auto;\n  margin-right: auto; */\n`;\n","import React from 'react';\nimport ContactListItem from 'components/ContactListItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectContactsFilter,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\n\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const isFetching = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      {isFetching && <Spinner size={36} />}\n      {error && (\n        <p>\n          Oops, something went wrong! <p>${error}</p>\n        </p>\n      )}\n      {visibleContacts.length > 0 ? (\n        <List>\n          {visibleContacts.map(contact => (\n            <ListItem key={contact.id}>\n              <ContactListItem contact={contact} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>No contacts</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  /* margin-bottom: 20px; */\n  padding: 4px 14px;\n  border-radius: 5px;\n  transition: all 0.3s ease-out;\n;\n  &:hover,\n  &:focus {\n    border: 2px solid #fabb18;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { setFilter } from '../../redux//filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contact by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Enter contact name\"\n        onChange={changeFilter}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 14px;\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Container } from 'components/Container/Container.styled';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      <ContactForm />\n      <Container>\n        <h2>Contacts list</h2>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Input","_templateObject3","Button","_templateObject4","selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filter","dispatch","useDispatch","useSelector","isFetching","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","isContactAlreadyExist","data","find","contact","handleChange","event","_event$target","target","value","_jsx","children","_jsxs","onSubmit","e","preventDefault","toast","concat","addContact","htmlFor","type","id","required","onChange","placeholder","disabled","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","_ref","onClick","contactId","deleteContact","List","ListItem","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","toLocaleLowerCase","includes","getVisibleContacts","_Fragment","Spinner","size","length","map","ContactListItem","Label","setFilter","Container","Contacts","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}